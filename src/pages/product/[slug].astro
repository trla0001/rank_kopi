---
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import Button from "../../components/Button.astro";
import CardProductStatic from "../../components/CardProductStatic.astro";
import Color from "../../components/Color.astro";
import FormCounter from "../../components/FormCounter.astro";
import SingleLayouts from "../../layouts/SingleLayouts.astro";
import FormInput from "../../components/FormInput.astro";
import CarouselProduct from "../../components/CarouselProduct.astro";

// Laver statiske stier til hvert element i databasen
export async function getStaticPaths() {
  // Henter dataen med fetch
  const data = await fetch("https://hhmpiztfssfaluwezhgq.supabase.co/rest/v1/rank_keramik", {
    method: "GET",
    headers: {
      apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhobXBpenRmc3NmYWx1d2V6aGdxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDgyNzA4NTUsImV4cCI6MjAyMzg0Njg1NX0.TqriEz5DkZTixJO6AhMtVsvt7xiSjMvpJm525z2c9jM",
    },
  }).then((res) => res.json());

  //Benytter map til at lave en underside for hvert element i databasen
  return data.map((elm) => {
    return {
      // Bruger slugget fra database (elm.slug) og navngiver filen dét
      // Det første 'slug' henviser til det slug, som er i mit filnavn (som er [slug].astro)
      // Det næste 'slug' henviser til en kolonne i databasen
      params: { slug: elm.slug },
      props: { myData: elm },
    };
  });
}

// Definere en prop, som dataen der er fetchet
const { myData } = Astro.props;
console.log(myData);

let udsolgt = false;
if (!myData.hvid && !myData.raa_rust && !myData.gron && !myData.graagraa && !myData.morkegron && !myData.gul && !myData.havblaa && !myData.rust && !myData.sortbrun && !myData.lyseblaa && !myData.morkebrun && !myData.blue) {
  // console.log("produktet er udsolgt");
  udsolgt = true;
}
---

<SingleLayouts>
  <Breadcrumbs current={myData.name} />
  <div class="layout">
    <div class="product">
      <CarouselProduct img={myData.img} img_1={myData.img_x[0]} img_2={myData.img_x[1]} />
      <!-- <section class="image">
        <img src=`/img/webp/products/${myData.img}` alt="" />
      </section> -->
      <section class="info">
        <div class="text">
          <p class="collection">{myData.collection}</p>
          <h1 class="name">{myData.name}</h1>
        </div>
        <p>
          <span class="price">{myData.price}</span>
          <span class="price_kr"> kr</span>
          {
            myData.price_old && (
              <span class="price_old">
                {myData.price_old}
                <span class="price_old_kr"> kr</span>
              </span>
            )
          }
        </p>
        <div class="colors">
          {myData.hvid && <Color type="singleview" img="hvid.webp" />}
          {myData.raa_rust && <Color type="singleview" img="raa_rust.webp" />}
          {myData.gron && <Color type="singleview" img="gron.webp" />}
          {myData.graagraa && <Color type="singleview" img="graagraa.webp" />}
          {myData.morkegron && <Color type="singleview" img="morkegron.webp" />}
          {myData.gul && <Color type="singleview" img="gul.webp" />}
          {myData.havblaa && <Color type="singleview" img="havblaa.webp" />}
          {myData.rust && <Color type="singleview" img="rust.webp" />}
          {myData.sortbrun && <Color type="singleview" img="sortbrun.webp" />}
          {myData.lyseblaa && <Color type="singleview" img="lyseblaa.webp" />}
          {myData.mørkebrun && <Color type="singleview" img="morkebrun.webp" />}
        </div>
        <FormCounter />
        {!udsolgt && <button>Tilføj til kurv</button>}
        {udsolgt && <FormInput type="udsolgt" text="Tilmeld venteliste" />}

        <article>
          <div class="dimensioner">
            <div>
              <h4>Materiale</h4>
              <p>{myData.material}</p>
            </div>
            <div>
              <h4>Mål</h4>
              <p>{myData.measurements}</p>
            </div>
          </div>
          <div>
            <h4>Beskrivelse</h4>
            <p>{myData.description}</p>
          </div>
        </article>
      </section>
    </div>
    <section class="related">
      <h2>Relaterede produkter</h2>
      <div class="placeholder">
        <CardProductStatic link="stabel-stor-urtepotte" img="stabel-stor-urtepotte.webp" name="Stor Urtepotte" collection="Stabel" price="800" />
        <CardProductStatic link="colours-kagetallerken" img="colours-kagetallerken.webp" name="Kagetallerken" collection="Colours" price="280" />
        <CardProductStatic link="colours-middagstallerken" img="colours-middagstallerken.webp" name="Middagstallerken" collection="Colours" price="550" />
        <CardProductStatic link="colours-kop-25cl" img="colours-kop-25cl.webp" name="Kop 25 cl" collection="Colours" price="350" />
      </div>
      <div class="button">
        <Button type="secondary" link="/products">Se flere</Button>
      </div>
    </section>
  </div>
</SingleLayouts>

<style>
  section {
    margin: var(--spacing_6) var(--spacing_5);
  }

  h1 {
    font-size: 2.25rem;
  }
  /* INFORMATIONER */
  .info {
    display: flex;
    flex-direction: column;
    gap: var(--spacing_4);
  }
  article {
    display: flex;
    flex-direction: column;
    gap: var(--spacing_7);
    margin-top: var(--spacing_8);
  }

  .colors {
    display: flex;
    gap: var(--spacing_3);
  }

  .collection {
    font-size: 1.125rem;
  }
  .dimensioner {
    display: flex;
    gap: var(--spacing_12);
  }

  /* PRICE */
  .price,
  .price_kr {
    font-size: 1.25rem;
  }

  .price_sale {
    color: var(--accent_600);
  }

  .price_old {
    margin-left: var(--spacing_3);
  }
  .price_old,
  .price_old_kr {
    text-decoration: line-through;
    font-size: 1rem;
  }

  button {
    font-family: var(--font_body);
    font-size: 1rem;
    font-weight: 400;
    color: var(--primary_50);
    text-decoration: none;

    background-color: var(--accent_600);
    border: solid;
    border-color: var(--accent_600);
    border-radius: var(--radius_max);

    padding: var(--spacing_4) var(--spacing_6);
    display: block;
    width: 100%;
  }

  .waitlist {
    background-color: transparent;
    color: var(--accent_600);
  }

  button:hover {
    box-shadow:
      0px 1px 3px rgb(190, 190, 190, 0.8),
      0px 4px 10px rgb(190, 190, 190, 0.8);
  }

  /* RELATEREDE PRODUKTER */
  .related {
    display: flex;
    flex-direction: column;
    gap: var(--spacing_5);
    /* align-items: center; */
    margin-bottom: var(--spacing_9);
  }

  .placeholder {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: var(--spacing_4);
  }

  .button {
    align-self: center;
  }

  @media (min-width: 750px) {
    section {
      padding: var(--spacing_8) var(--spacing_6);
    }
    .product {
      display: grid;
      grid-template-columns: 2fr 2fr;
      gap: var(--spacing_4);
    }
  }
  @media (min-width: 1000px) {
    .layout {
      display: flex;
      flex-direction: column;
      gap: var(--spacing_4);
    }

    .product {
      display: grid;
      grid-template-columns: 3fr 2fr;
      gap: var(--spacing_11);
    }

    .info {
      display: flex;
      flex-direction: column;
      gap: var(--spacing_6);
      margin: 0;
    }

    .related {
      gap: var(--spacing_8);
    }
    .related h2 {
      align-self: center;
    }

    .placeholder {
      grid-template-columns: repeat(auto-fill, minmax(210px, 1fr));
    }
    .colors {
      gap: var(--spacing_4);
    }
  }
</style>
